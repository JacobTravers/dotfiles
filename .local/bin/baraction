#!/bin/sh

cpu() {
  icon=
  read -r cpu a b c previdle rest </proc/stat
  total=$((a + b + c + previdle))
  prev_stat_file="/tmp/prev_cpu_stat"
  if [ -f "$prev_stat_file" ]; then
    read -r _ a_prev b_prev c_prev previdle_prev _ <"$prev_stat_file"
    cpu_usage=$((100 * ((total - (a_prev + b_prev + c_prev + previdle_prev)) - (previdle - previdle_prev)) / (total - (a_prev + b_prev + c_prev + previdle_prev))))
    printf "%s%3d%%" "$icon" "$cpu_usage"
  else
    printf "N/A"
  fi
  echo "$cpu $a $b $c $previdle $rest" >"$prev_stat_file"
}

ram() {
  icon=
  free_output=$(free)
  used=$(echo "$free_output" | awk '/Mem:/ {print $3}')
  total=$(echo "$free_output" | awk '/Mem:/ {print $2}')
  percent=$((200 * used / total % 2 == 0 ? 100 * used / total : 101 * used / total))
  printf "%s%3d%%" "$icon" "$percent"
}

ssd() {
  icon=󰋊
  SSD=$(df -P /home | awk 'NR==2 {print int($5)}')
  printf "%s%2d%%" "$icon" "$SSD"
}

bat() {
  read -r charging </sys/class/power_supply/AC/online
  read -r percent </sys/class/power_supply/BAT0/capacity

  icon=$(case "$percent" in
    [1-9]) echo "" ;;
    [1-3][0-9]) echo "" ;;
    [4-5][0-9]) echo "" ;;
    [6-7][0-9]) echo "" ;;
    *) echo "" ;;
    esac)

  [ "$charging" = "1" ] && icon="⚡"
  printf "%s%3d%%" "$icon" "$percent"
}

vol() {
  volume=$(pactl get-sink-volume @DEFAULT_SINK@ | grep -o '[0-9]*%' | head -1 | tr -d '%')
  mute=$(pactl get-sink-mute @DEFAULT_SINK@ | grep -o 'yes')

  if [ "$mute" = "yes" ]; then
    icon=""
  else
    icon=""
  fi

  printf "%s%3d%%" "$icon" "$volume"
}

mic() {
  if find /proc/asound/card*/input*/status -type f -exec grep -q "RUNNING" {} + 2>/dev/null; then
    printf ""
  else
    printf ""
  fi
}

net() {
  if ip a | grep 'wlan0' | grep -c 'UP' >/dev/null; then
    printf ""
  else
    printf "󰖪"
  fi
}

blu() {
  find /sys/class/bluetooth -name powered -quit 2>/dev/null && printf "󰂱" || printf "󰂲"
}

SLEEP_SEC=2
while :; do
  echo "$(cpu)  $(ram)  $(ssd)  $(blu)  $(net)   $(mic)  "
  sleep $SLEEP_SEC
done
