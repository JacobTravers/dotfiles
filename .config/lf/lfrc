%[ $LF_LEVEL -eq 1 ] || echo "Warning: You're in a nested lf instance!"

############### BASIC SETTINGS ###############

set sixel true
set drawbox true
set icons true
set mouse true
set relativenumber true
set scrolloff 10
set shellopts '-eu'
set shell sh
set tabstop 2

set previewer ~/.config/lf/sandbox
set cleaner ~/.config/lf/cleaner

# dynamic columns for view width
%{{
  w=$(tput cols)
  if [ $w -le 80 ]; then
    lf -remote "send $id set ratios 1:2"
  elif [ $w -le 160 ]; then
    lf -remote "send $id set ratios 1:2:3"
  else
    lf -remote "send $id set ratios 1:2:3:5"
  fi
}}

############### UTILITY ###############

# use archivemount to browse archives like directories
cmd open ${{
  case "$f" in
    *.tar.bz|*.tar.bz2|*.tbz|*.tbz2|*.tar.gz|*.tgz|*.tar.xz|*.txz|*.zip|*.rar|*.iso)
      mntdir="$f-archivemount"
      [ ! -d "$mntdir" ] && {
        mkdir "$mntdir"
        archivemount "$f" "$mntdir"
        echo "$mntdir" >> "/tmp/__lf_archivemount_$id"
      }
      lf -remote "send $id cd \"$mntdir\""
      lf -remote "send $id reload"
      ;;
    *)
      for f in $fx; do
        "$OPENER" "$f" > /dev/null 2> /dev/null &
      done;;
  esac
}}


############### CUSTOM COMMANDS ###############

# jump to dir with zoxide
cmd zoxide %lf -remote "send $id cd '$(zoxide query $1)'"

# jump to file from fzf
cmd fuzzy_file ${{
  res="$(fd . -H -d 4 | fzf | sed 's/\\/\\\\/g;s/"/\\"/g')"
  if [ -d "$res" ]; then
    cmd="cd"
  else
    cmd="select"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd fuzzy_content ${{
  res="$( \
    RG_PREFIX="rg --column --line-number --no-heading --color=always \
      --smart-case "
    FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
      fzf --bind "change:reload:$RG_PREFIX {q} || true" \
      --ansi --layout=reverse --header 'Search in files' \
      | cut -d':' -f1
  )"
  [ ! -z "$res" ] && lf -remote "send $id select \"$res\""
}}

cmd link %{{
  set -- $(cat ~/.local/share/lf/files)
  mode="$1"
  shift
  if [ "$#" -lt 1 ]; then
    lf -remote "send $id echo no files to link"
    exit 0
  fi case "$mode" in
    # symbolically copy mode is indicating a soft link
    copy) ln -sr -t . -- "$@";;
    # while a move mode is indicating a hard link
    move) ln -t . -- "$@";;
  esac
  rm ~/.local/share/lf/files
  lf -remote "send clear"
}}

# recursively make dirs
cmd mkdir %{{
  IFS=" "
  mkdir -p -- "$*"
  lf -remote "send $id select \"$*\""
}}

cmd mkdirfromsels ${{
  set -f
  read newd
  mkdir -- "$newd"
  mv -- $fx "$newd"
}}

cmd rename-blank ${{
	lf -remote "send $id push :rename<space>"
}}

cmd set-wallpaper ${{
	feh --no-fehbg --bg-scale $f
}}

cmd bak $IFS="`printf '\n\t'`"; bak $fx
cmd touch-edit $IFS=" "; "$EDITOR" "$*"; lf -remote "send $id select \"$*\""
cmd ripdrag $IFS="`printf '\n\t'`"; ripdrag $fx &
cmd open-with %"$@" "$fx" &disown
cmd renamer $IFS="`printf '\n\t'`"; renamer $fx
cmd rip $IFS="`printf '\n\t'`"; rip $fx
cmd yank-basename $basename -a -- "$fx" | head -c-1 | xclip -selection clipboard
cmd yank-dirname $dirname -- "$f" | head -c-1 | xclip -selection clipboard
cmd yank-path $printf '%s' "$fx" | xclip -selection clipboard



############### KEY BINDINGS ###############

# unbind defaults
map m
map r

# goto shortcuts
map gb cd ~/.local/bin/
map gc cd ~/.config/
map gd cd ~/downloads/
map gg cd ~/games/
map gm cd ~/media/pictures/memes/
map gM cd /run/media/sugimoto/
map gn cd ~/notes/
map gp cd ~/media/pictures/
map gr cd ~/repos/
map gs cd ~/media/pictures/screenshots/
map gt cd ~/tmp/
map gW cd ~/media/pictures/wallpapers/

# kakoune-like bindings
map A rename                      # at the very end
map a push A<a-b><a-b><a-f>       # before extention
map b bak                         # at the very beginning
map i push A<c-a>                 # at the very beginning
map r push A<a-b><a-b><a-f><c-u>  # empty w/extention
map gj    bottom
map gk    top
map J     :toggle; down
map K     :toggle; up
map <a-n> search-prev
map <a-N> :toggle; search-prev
map N     :toggle; search-next
map S     push :glob-select<space>
map <a-S> push :glob-unselect<space>

# mouse bindings
map <m-1>    ripdrag "$fx"
map <m-down> down
map <m-up>   up

# misc bindings
map .        set hidden!
map <esc>    clear
map <enter>  open
map o        push :open-with<space>

map <a-d> rip                     # safer remove function (rip)
map D     delete                  # actually delete
map F     :fuzzy_file             # jump to file with fzf choice
map G     :fuzzy_content          # search files by grepping contents
map m     push :mkdir<space>      # create new dir
map M     mkdirfromsels           # create new dir with selections
map R     renamer                 # rename files using $EDITOR (pipe-rename)
map P     :link                   # press 'y->P' soft-link; press 'd->P' hard-link
map t     push $touch<space>      # new file
map T     push :touch-edit<space> # edit new file in kakoune
map x     $$f                     # execute current file (must be executable)
map X     !$f                     # execute current file (must be executable)
map Y     :yank-path              # copy path
map w     :set-wallpaper          # set wallpaper to current file
map Z     push :zoxide<space>'    # jump to dir with zoxide guess
