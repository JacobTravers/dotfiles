# Kakoune with Kakhis
# Author: Jacob Travers

# plugin manager
source "~/.config/kak/plugins/plug.kak/rc/plug.kak"
plug "andreyorst/plug.kak" noload

plug "JacobTravers/kampliment" noload do %{
  cargo install --path . --root $CARGO_HOME
  for script in $(ls ~/.config/kak/plugins/kampliment/scripts/); do
    ln -fs ~/.config/kak/plugins/kampliment/scripts/$script ~/.local/bin/$script
  done
}

# interface for external programs (kampliment)
evaluate-commands %sh{
  kamp init -a -e EDITOR='kamp edit'
}

# extend kak with lua
plug "gustavo-hms/luar" %{
  require-module luar
  set-option global luar_interpreter luajit
}


################### DISPLAY ###################

set-option global ui_options terminal_assistant=none
set-option global scrolloff 1,3

plug "caksoylar/kakoune-mysticaltutor" theme %{ colorscheme mysticaltutor-trans }

# Toggle relative line numbers with insert mode
plug "evanrelf/number-toggle.kak" config %{
  require-module "number-toggle"
}

# Rainbow delimiters + current scope
plug "JacobTravers/kak-rainbower" %{
  hook global WinCreate .* %{ rainbow-enable-window }
}

# LSP Magic
plug "kak-lsp/kak-lsp" do %{
  cargo build --release --locked
  cargo install --force --path .
} config %{
  set global lsp_diagnostic_line_error_sign '║'
  set global lsp_diagnostic_line_warning_sign '┊'
  set global lsp_hover_max_lines 40
  define-command lsp-restart -docstring 'restart lsp server' %{ lsp-stop; lsp-start }
  hook global WinSetOption filetype=(css|html|javascript|json|go|python|rust|scss|sql|yaml) %{
    set-option window lsp_auto_highlight_references true
    set-option window lsp_hover_anchor true
    lsp-auto-hover-enable
    lsp-auto-hover-insert-mode-enable
    lsp-inlay-diagnostics-enable window
    echo -debug "Enabling LSP for filtetype %opt{filetype}"
    lsp-enable-window

    map global insert <tab> '<a-;>:try lsp-snippets-select-next-placeholders catch %{ execute-keys -with-hooks <lt>tab> }<ret>' -docstring 'Select next snippet placeholder'
    map global object a '<a-semicolon>lsp-object<ret>' -docstring 'LSP any symbol'
    map global object <a-a> '<a-semicolon>lsp-object<ret>' -docstring 'LSP any symbol'
    map global object e '<a-semicolon>lsp-object Function Method<ret>' -docstring 'LSP function or method'
    map global object k '<a-semicolon>lsp-object Class Interface Struct<ret>' -docstring 'LSP class interface or struct'
    map global insert <tab> '<a-;>:try lsp-snippets-select-next-placeholders catch %{ execute-keys -with-hooks <lt>tab> }<ret>' -docstring 'Select next snippet placeholder'
  }
  hook global WinSetOption filetype=(javascript|json|go|python|rust|sql) %{
    lsp-inlay-hints-enable window
  }
  hook global KakEnd .* lsp-exit
}

# swap client windows etc
plug "alexherbo2/window.kak"


############### FORMAT/LINT ###############

# Empty scratch buffer
hook global BufCreate '\*scratch\*' %{ execute-keys '%<a-d>' }

plug "alexherbo2/indent.kak" %{
  enable-detect-indent
  set-indent global 2
}

plug "andreyorst/smarttab.kak" %{
  hook global BufCreate .* %{
    autoconfigtab
  }
}

# lint/format etc mode
declare-user-mode dev
  map global dev d -docstring "diagnostic"   ':lsp-diagnostics <ret>'
  map global dev D -docstring "lint-buffer"  ':buffer *lint-output* <ret>'
  map global dev f -docstring "format"       ':format <ret>'
  map global dev F -docstring "format sel"   ':format <ret>'
  map global dev j -docstring "next lint"    ':lint-next-message <ret>'
  map global dev k -docstring "prev lint"    ':lint-previous-message <ret>'
  map global dev l -docstring "lint"         ':lint <ret>'
  map global dev L -docstring "lint sel"     ':lint <ret>'
  map global dev s -docstring "set filetype" ':connect terminal kamp-filetypes <ret>'

# linting and formating per language
source "~/.config/kak/contexts/commit.kak"
source "~/.config/kak/contexts/css.kak"
source "~/.config/kak/contexts/diff.kak"
source "~/.config/kak/contexts/fish.kak"
source "~/.config/kak/contexts/html.kak"
source "~/.config/kak/contexts/javascript.kak"
source "~/.config/kak/contexts/json.kak"
source "~/.config/kak/contexts/markdown.kak"
source "~/.config/kak/contexts/sh.kak"


###################### UTILITY ######################

# Alacritty integration
plug "alexherbo2/alacritty.kak" %{
  alias global terminal alacritty-terminal-window
  alias global popup alacritty-terminal-popup
}

plug "alexherbo2/auto-pairs.kak" %{
  enable-auto-pairs
}

# Clipboard integration
plug "lePerdu/kakboard" %{
  hook global WinCreate .* %{ kakboard-enable }
}

# display text with ansi color-codes inside a fifo
plug "eburghar/kakpipe" do %{
  cargo install --force --path . --root ~/.local
}
require-module kakpipe

plug "https://gitlab.com/Screwtapello/kakoune-repl-buffer"

plug "JacobTravers/kakoune-sudo-write" %{
  alias global sw 'sudo-write'
  alias global swq 'sudo-write-quit'
}

plug 'delapouite/kakoune-auto-percent'

# Starship for kakoune modeline
plug "eburghar/kakship" do %{
  cargo install --force --path . --root ~/.local
  [ ! -e $kak_config/starship.toml ] && cp starship.toml $kak_config/
} config %{
  kakship-enable
}

plug "natasky/kakoune-multi-file"

set global grepcmd 'rg --column --smart-case'

define-command comment -docstring "(un)comment lines" %{
  try %{
    execute-keys _
    comment-block
  } catch comment-line
}

define-command delta -docstring "view diff with delta" -shell-completion -params 1.. %{
  kakpipe -n delta -- delta %arg{@};
}

define-command diff -docstring "view diff" -shell-completion -params 1.. %{
  kakpipe -n diff -- diff -u %arg{@}; set buffer filetype diff;
}

define-command difft -docstring "view diff with difftastic" -shell-completion -params 1.. %{
  kakpipe -n difft -- difft --width %val{window_width} --color always %arg{@};
}

define-command diff-buffers -override -params 2 %{
  evaluate-commands %sh{
    file1=$(mktemp)
    file2=$(mktemp)
    echo "
      evaluate-commands -buffer '$1' write -force $file1
      evaluate-commands -buffer '$2' write -force $file2
      edit! -scratch *diff-buffers*
      set buffer filetype diff
      set-register | 'diff -u $file1 $file2; rm $file1 $file2'
      execute-keys !<ret>gg
    "
}}
complete-command diff-buffers buffer

define-command helpp -docstring "print an answer for the query from stackoverflow etc" -params 1.. %{
  kakpipe -n help -- %arg{@} --help;
}

define-command how -docstring "print an answer for the query from stackoverflow etc" -params 1.. %{
  kakpipe -n how -- hors -a -n 2 -p never %arg{@};
}

define-command mdn -docstring "print mdn docs for the query" -params 1.. %{
  kakpipe -n mdn -- mdn %arg{@};
}

define-command tldr -docstring "print a cheatsheet for the given console command" -shell-completion -params 1.. %{
  kakpipe -n tldr -- tldr --color always %arg{@};
}

define-command reader-mode -docstring "enables settings for better reading" %{
  remove-highlighter global/whitespace
  ui-whitespaces-toggle
  ui-wrap-toggle
  rainbow-disable-window
  map buffer normal d <c-d>
  map buffer normal u <c-u>
  map buffer normal q ':quit<ret>'
}
hook global WinDisplay '\*(delta|diff|difft|greeting|help|man \w+|mdn|tldr)\*' %{
  reader-mode
}

###################### NORMAL MODE ###################### 


##########REMAPPINGS

map global user <space> : -docstring "prompt"

map global normal <a-space> <a-,> -docstring "clear current (or nth) selection"
map global normal <esc> ,         -docstring "clear multi-selection and keep (nth)"

map global prompt <c-n> <tab>   -docstring "next completion"
map global prompt <c-p> <s-tab> -docstring "previous completion"

map global normal w b         -docstring "select previous word"
map global normal W B         -docstring "extend previous word"
map global normal <a-w> <a-b> -docstring "select previous BIG-WORD"
map global normal <a-W> <a-B> -docstring "extend prevous BIG-WORD"


#########AUGMENTATION

# paste in insert mode
map global insert <c-v> -docstring "insert mode paste"   '<esc>Pi'

map global normal D -docstring "vim D"         'Gld'
map global normal Y -docstring "yank to end"   'Gly'

map global normal J -docstring "select next line"       'Jx'
map global normal K -docstring "select previous line"   'Kx'

map global normal x     -docstring "select inner"          '<a-i>'
map global normal X     -docstring "select outer"          '<a-a>'
map global normal <a-x> -docstring "select all matches"    '*%s<ret>)'
map global normal <a-X> -docstring "select buffer"         <percent>

# Select/add next match
map global normal v     -docstring "select next match"      '*n'
map global normal <a-v> -docstring "deselect current sel"   '*<a-n>'
map global normal V     -docstring "add next match"         '*N'
map global normal <a-V> -docstring "add previous match"     '*<a-N>'

# case insensitive search
map global normal /     -docstring "search"                      '/(?i)'
map global normal <a-/> -docstring "search backwards"            '<a-/>(?i)'
map global normal ?     -docstring "(extend) search"             '?(?i)'
map global normal <a-?> -docstring "(extend) search backwards"   '<a-?>(?i)'

# (un)Comment Lines
map global normal <#> -docstring "comment"   ':comment <ret>'

# Better match function
plug "useredsa/dynamic-matching.kak" %{
  dynamic-matching-dmatch-conf
  map global normal m -docstring "select dynamic match"   ':enter-user-mode dmatch <ret>'
  map global normal M -docstring "add dynamic match"      ':enter-user-mode Dmatch <ret>'
}

# kampliment (coderunner) bindings
map global normal <c-t> -docstring "New client"     ':new <ret>'
map global normal <c-n> -docstring "New terminal"   ':connect terminal <ret>'
map global normal +     -docstring "New popup"      ':connect popup <ret>'

map global normal <c-h> -docstring "lf"        ':connect terminal lf <ret>'
map global normal <c-v> -docstring "lazygit"   ':connect terminal lazygit <ret>'

map global normal B     -docstring "buffer picker"   ': connect terminal kamp-buffers<ret>'
map global normal <c-k> -docstring "file picker"     ': connect terminal kamp-files<ret>'
map global normal <c-g> -docstring "grep picker"     ': connect terminal kamp-grep<ret>'

# kakoune fuzzy finder with fzy algorithm
plug "gustavo-hms/peneira" %{
  require-module peneira
  map global normal <c-l> -docstring "search lines"     ': peneira-lines<ret>'
  map global normal <c-s> -docstring "search symbols"   ': peneira-symbols<ret>'
}


################# MODES ##################

# Plugin manager
map global user = -docstring "plug"   ':plug-list <ret>'

# Navigate buffers
plug "delapouite/kakoune-buffers" %{
  hook global WinDisplay .* info-buffers
    map global normal b ":enter-buffers-mode <ret>"
    alias global bd delete-buffer
    alias global bd! delete-buffer!
    alias global bf buffer-first
    alias global bl buffer-last
    alias global bo buffer-only
    alias global bo! buffer-only-force
}

plug 'delapouite/kakoune-cd' %{
  # Suggested mapping
  map global user c ': enter-user-mode cd<ret>' -docstring 'cd'
  # Suggested aliases
  alias global cdb change-directory-current-buffer
  alias global cdr change-directory-project-root
  alias global ecd edit-current-buffer-directory
  alias global pwd print-working-directory
}

map global user d -docstring "dev"  ':enter-user-mode dev <ret>'

plug "danr/kakoune-easymotion" %{
  declare-user-mode e-motion
  map global user e -docstring "e-motion" ':enter-user-mode e-motion <ret>'
    map global e-motion e -docstring "→ word"   ':easy-motion-w <ret>'
    map global e-motion E -docstring "→ WORD"   ':easy-motion-W <ret>'
    map global e-motion f -docstring "→ char"   ':easy-motion-f <ret>'
    map global e-motion b -docstring "← char"   ':easy-motion-alt-f <ret>'
    map global e-motion j -docstring "↓ line"   ':easy-motion-j <ret>'
    map global e-motion k -docstring "↑ line"   ':easy-motion-k <ret>'
    map global e-motion w -docstring "← word"   ':easy-motion-b <ret>'
    map global e-motion W -docstring "← WORD"   ':easy-motion-B <ret>'
}

declare-user-mode grep
  map global user g -docstring "grep"          ':enter-user-mode grep <ret>'
  map global grep g -docstring "grep"          ':grep '
  map global grep j -docstring "next match"    ':grep-next-match <ret>'
  map global grep k -docstring "prev match"    ':grep-previous-match <ret>'
  map global grep w -docstring "write edits"   ':grep-write <ret>'

map global user   k     -docstring "klip off"     ':kakboard-disable; kakboard-disable <ret>'
map global user   K     -docstring "klip on"      ':kakboard-enable <ret>'

map global user l -docstring "LSP" %{:enter-user-mode lsp <ret>}
  map global lsp <minus> -docstring "disable"   ':lsp-disable-window <ret>'
  map global lsp <plus>  -docstring "enable"    ':lsp-enable-window <ret>'

# Dynamic match mode
map global user m  -docstring "dmatch"   ':enter-user-mode -lock dmatch <ret>'

# script for applying math
define-command execute-keys-with-register -params 2 -docstring 'execute keys with register' %{
  evaluate-commands -save-regs '"' %{
    set-register '"' %arg{2}
    execute-keys '""' %arg{1}
  }
} 
define-command math -docstring 'do the maths' %{
  prompt math: %{
    execute-keys-with-register 'a<c-r>"<esc>|bc <ret>' %val{text}
  }
}
map global user M -docstring "math"   ':math <ret>'

plug "caksoylar/kakoune-focus" branch "kak-master" config %{
  map global normal : -docstring "narrow"   ':focus-toggle <ret>'
}

# Edit/extend/trim selections one by one
plug "occivink/kakoune-phantom-selection" %{
  declare-user-mode phantom
  map global user p -docstring "phantom"       ':enter-user-mode phantom <ret>'
  map global phantom a -docstring "add"        ':phantom-selection-add-selection <ret>'
  map global phantom c -docstring "clear"      ':phantom-selection-select-all; phantom-selection-clear <ret>'
  map global phantom n -docstring "next"       ':phantom-selection-iterate-next <ret>'
  map global phantom p -docstring "previous"   ':phantom-selection-iterate-prev <ret>'
}

# Select/edit surrounding chars and tags
plug "h-youhei/kakoune-surround"
  declare-user-mode surround
  map global normal <'> ":enter-user-mode surround <ret>"
  map global surround d -docstring "delete"              ':delete-surround <ret>'
  map global surround i -docstring "insert"              ':surround <ret>'
  map global surround r -docstring "replace"             ':change-surround <ret>'
  map global surround s -docstring "select"              ':select-surround <ret>'
  map global surround D -docstring "delete tag"          ':delete-surrounding-tag <ret>'
  map global surround I -docstring "surround with tag"   ':surround-with-tag <ret>'
  map global surround R -docstring "replace tag"         ':change-surrounding-tag <ret>'
  map global surround S -docstring "select tag"          ':select-surrounding-tag <ret>'

plug 'https://gitlab.com/kstr0k/mru-files.kak.git' %{
  require-module kakhist
  kakhist-init
} demand mru-files %{
  map global normal <c-r> -docstring "recent files" ':mru-files <ret>'
  declare-user-mode recent
  map global user r -docstring "recent" ':enter-user-mode recent<ret>'
  map global recent f -docstring "files"           ':mru-files <ret>'
  map global recent r -docstring "related files"   ':mru-files-related <ret>'
  map global recent l -docstring "load session"    ':mru-files-session-load <ret>'
  map global recent s -docstring "save session"    ':mru-files-session-save <ret>'
}

# Spelling and grammar checking
declare-user-mode spell
  map global user s -docstring "spell"      ':spell <ret>:enter-user-mode -lock spell <ret>'
  map global spell a -docstring "add"       ':spell-add <ret>'
  map global spell c -docstring "clear"     ':spell-clear <ret>'
  map global spell e -docstring "enable"    ':spell <ret>'
  map global spell n -docstring "next"      ':spell-next <ret>'
  map global spell r -docstring "replace"   ':spell-replace <ret>'
  declare-option str language en-US

# Tree-sitter syntax parsing and functionality
plug "ul/kak-tree" %{
  declare-user-mode tree
  map global user t -docstring "tree"          ':enter-user-mode tree <ret>'
  map global tree t -docstring "syntax tree"   ':tree-node-sexp <ret>'
  map global tree c -docstring "children"      ':tree-select-children <ret>'
  map global tree h -docstring "parent"        ':tree-select-parent-node <ret>'
  map global tree j -docstring "next"          ':tree-select-next-node <ret>'
  map global tree k -docstring "previous"      ':tree-select-previous-node <ret>'
  map global tree l -docstring "first child"   ':tree-select-first-child <ret>'
  map global tree . -docstring "lock"          ':enter-user-mode -lock tree <ret>'
}

plug "kkga/ui.kak" %{
  map global user u -docstring "ui mode"   ':enter-user-mode ui <ret>'
  set-option global ui_wrap_flags -word -indent -marker ~~
  hook global WinCreate .* %{
    ui-todos-toggle
    ui-lint-toggle
    ui-git-diff-toggle
    ui-whitespaces-toggle
  }
}

# write to file
map global user w -docstring "write"   ':w <ret>'

plug "JacobTravers/kakoune-grep-write"%{
  hook global WinDisplay '\*grep\*' %{
    alias buffer w grep-write
    alias buffer wq grep-write-quit
    map buffer user w -docstring "write"   ':grep-write <ret>'
  }
}
map global user / -docstring "search"   ':grep '
