# Kakoune with Kakhis
# Author: Jacob Travers

evaluate-commands %sh{
  cork init
  kamp init -a -e EDITOR='kamp edit'
}

################### DISPLAY ###################

colorscheme kalolo

set-option global ui_options terminal_assistant=none
set-option global scrolloff 1,3

# Toggle relative line numbers with insert mode
cork number-toggle https://github.com/evanrelf/number-toggle.kak %{
  require-module "number-toggle"
}

# Rainbow delimiters + current scope
cork kak-rainbower https://github.com/JacobTravers/kak-rainbower %{
  hook global WinCreate .* %{ rainbow-enable-window }
}

############### FORMAT/LINT ###############

# LSP Magic
cork kak-lsp https://github.com/kak-lsp/kak-lsp %{
  define-command lsp-restart -docstring 'restart lsp server' %{ lsp-stop; lsp-start }
  set global lsp_diagnostic_line_error_sign '║'
  set global lsp_diagnostic_line_warning_sign '┊'
  set global lsp_hover_max_lines 40
  hook global KakEnd .* lsp-exit
}

# Lint/format etc mode
declare-user-mode dev
  map global dev d -docstring "diagnostic"   ':lsp-diagnostics <ret>'
  map global dev D -docstring "lint-buffer"  ':buffer *lint-output* <ret>'
  map global dev f -docstring "format"       ':format <ret>'
  map global dev F -docstring "format sel"   ':format <ret>'
  map global dev j -docstring "next lint"    ':lint-next-message <ret>'
  map global dev k -docstring "prev lint"    ':lint-previous-message <ret>'
  map global dev l -docstring "lint"         ':lint <ret>'
  map global dev L -docstring "lint sel"     ':lint <ret>'
  map global dev s -docstring "set filetype" ':connect terminal kamp-filetypes <ret>'

cork indent https://github.com/alexherbo2/indent.kak %{
  enable-detect-indent
  set-indent global 2
}

cork smarttab https://github.com/andreyorst/smarttab.kak %{
  hook global BufCreate .* %{
    autoconfigtab
  }
}

# Contextual Scripts
source "~/.config/kak/contexts/commit.kak"
source "~/.config/kak/contexts/css.kak"
source "~/.config/kak/contexts/diff.kak"
source "~/.config/kak/contexts/fish.kak"
source "~/.config/kak/contexts/go.kak"
source "~/.config/kak/contexts/grep.kak"
source "~/.config/kak/contexts/html.kak"
source "~/.config/kak/contexts/javascript.kak"
source "~/.config/kak/contexts/json.kak"
source "~/.config/kak/contexts/markdown.kak"
source "~/.config/kak/contexts/python.kak"
source "~/.config/kak/contexts/rust.kak"
source "~/.config/kak/contexts/sh.kak"

###################### UTILITY ######################

set global grepcmd 'rg --column --smart-case'

# Empty scratch buffer(s)
hook global BufCreate '\*scratch(-\d+)?\*' %{ execute-keys -draft '%<a-d>' }

# Alacritty integration
cork alacritty https://github.com/alexherbo2/alacritty.kak %{
  alias global terminal alacritty-terminal-window
  alias global popup alacritty-terminal-popup
}

cork auto-pairs https://github.com/alexherbo2/auto-pairs.kak %{ enable-auto-pairs }

cork grep-expand https://github.com/JacobTravers/grep-expand.kak

# Clipboard Integration
cork kakboard https://github.com/lePerdu/kakboard %{ hook global WinCreate .* %{ kakboard-enable } }

cork kakoune-auto-percent https://github.com/delapouite/kakoune-auto-percent

cork kakoune-repl-buffer https://gitlab.com/Screwtapello/kakoune-repl-buffer

cork kakoune-state-save https://gitlab.com/Screwtapello/kakoune-state-save %{
  hook global KakBegin .* %{
    state-save-reg-load colon
    state-save-reg-load pipe
    state-save-reg-load slash
  }
  hook global KakEnd .* %{
    state-save-reg-save colon
    state-save-reg-save pipe
    state-save-reg-save slash
  }
}

cork kak-live-grep https://git.sr.ht/~raiguard/kak-live-grep %{
  set-face global LiveGrepMatch +u
}

cork sudo-write https://github.com/JacobTravers/sudo-write.kak %{
  alias global sw 'sudo-write'
  alias global swq 'sudo-write-quit'
}

# Display text with ansi color-codes inside a fifo
cork kakpipe https://github.com/eburghar/kakpipe %{ require-module kakpipe }

# Starship for kakoune modeline
cork kakship https://github.com/eburghar/kakship %{ kakship-enable }

# Interact with external programs
cork kampliment https://github.com/vbauerster/kampliment

# Swap client windows etc
cork window https://github.com/alexherbo2/window.kak

###################### COMMANDS ######################

define-command comment -docstring "(un)comment lines" %{
  try %{
    execute-keys _
    comment-block
  } catch comment-line
}

define-command delta -docstring "view diff with delta" -shell-completion -params 1.. %{
  kakpipe -n delta -- delta %arg{@};
}

define-command dic -docstring "dictionary buffer for the given query" -params 0..2 %{
  evaluate-commands %sh{
    if [ $# -eq 0 ]; then
      echo "kakpipe -n dic -- dic %val{selection} %val{window_width}"
    else
      echo "kakpipe -n dic -- dic %arg{@} %val{window_width}"
    fi
  }
}

define-command diff -docstring "view diff" -shell-completion -params 1.. %{
  kakpipe -n diff -- diff -u %arg{@}; set buffer filetype diff;
}

define-command difft -docstring "view diff with difftastic" -shell-completion -params 1.. %{
  kakpipe -n difft -- difft --width %val{window_width} --color always %arg{@};
}

define-command diff-buffers -buffer-completion -override -params 2 %{
  evaluate-commands %sh{
    file1=$(mktemp)
    file2=$(mktemp)
    echo "
      evaluate-commands -buffer '$1' write -force $file1
      evaluate-commands -buffer '$2' write -force $file2
      edit! -scratch *diff-buffers*
      set buffer filetype diff
      set-register | 'diff -u $file1 $file2 | \
        sd -n 1 -- ''-{3} /tmp.*?$'' ''--- $1'' | \
        sd -n 1 -- ''\+{3} /tmp.*?$'' ''+++ $2'';
        rm $file1 $file2'
      execute-keys !<ret>gg
    "
}}


define-command execute-keys-with-register -params 2 -docstring 'execute keys with register' %{
  evaluate-commands -save-regs '"' %{
    set-register '"' %arg{2}
    execute-keys '""' %arg{1}
  }
}

define-command helpp -docstring "print the --help output for the given command" -shell-completion -params 0.. %{
  kakpipe -n help -- %arg{@} --help;
  evaluate-commands %sh{
    if [ $# -eq 0 ]; then
      echo "kakpipe -n help -- %val{selection} --help"
    else
      echo "kakpipe -n help -- %arg{@} --help"
    fi
  }
}

define-command how -docstring "print an answer for the query from stackoverflow etc" -params 1.. %{
  kakpipe -n how -- hors -a -n 2 -p never %arg{@};
}

define-command math -docstring 'do the maths' %{
  prompt math: %{
    execute-keys-with-register 'a<c-r>"<esc>|bc <ret>' %val{text}
  }
}

define-command mdn -docstring "print mdn docs for the query" -params 0.. %{
  evaluate-commands %sh{
    if [ $# -eq 0 ]; then
      echo "kakpipe -n mdn -- mdn %val{selection}"
    else
      echo "kakpipe -n mdn -- mdn %arg{@}"
    fi
  }
}

define-command reader-mode -docstring "enables settings for better reading" %{
  remove-highlighter global/whitespace
  rainbow-disable-window
  ui-trailing-spaces-disable
  ui-whitespaces-disable
  ui-wrap-disable
  map buffer normal d <c-d>
  map buffer normal u <c-u>
}
hook global WinDisplay '\*(delta|diff|difft|greeting|help|man \w+|mdn|tldr)\*' %{
  reader-mode
}

define-command tldr -docstring "print a cheatsheet for the given console command" -shell-completion -params 0.. %{
  evaluate-commands %sh{
    if [ $# -eq 0 ]; then
      echo "kakpipe -n tldr -- tldr --color always %val{selection}"
    else
      echo "kakpipe -n tldr -- tldr --color always %arg{@}"
    fi
  }
}



###################### NORMAL KEYS ######################

# Clear selections
map global normal <a-space> <a-,> -docstring "clear current (or nth) selection"
map global normal <esc> ,         -docstring "clear multi-selection and keep (nth)"

# Use W as a more ergonomic 'previous word'
map global normal w b         -docstring "select previous word"
map global normal W B         -docstring "extend previous word"
map global normal <a-w> <a-b> -docstring "select previous BIG-WORD"
map global normal <a-W> <a-B> -docstring "extend prevous BIG-WORD"


# Select whole lines
map global normal J -docstring "select next line"       'Jx'
map global normal K -docstring "select previous line"   'Kx'

# Make x/X inner and outer object selection
map global normal x     -docstring "select inner"         '<a-i>'
map global normal X     -docstring "select outer"         '<a-a>'

# Select all matches
map global normal <a-x> -docstring "select all matches"   '*%s<ret>)'

# Select/add next match
map global normal v     -docstring "select next match"      '*n'
map global normal <a-v> -docstring "deselect current sel"   '*<a-n>'
map global normal V     -docstring "add next match"         '*N'
map global normal <a-V> -docstring "add previous match"     '*<a-N>'

# View Mode
map global normal Y v -docstring "view mode"

# Case insensitive search
map global normal /     -docstring "search"                      '/(?i)'
map global normal <a-/> -docstring "search backwards"            '<a-/>(?i)'
map global normal ?     -docstring "(extend) search"             '?(?i)'
map global normal <a-?> -docstring "(extend) search backwards"   '<a-?>(?i)'

# (Un)Comment Lines
map global normal <#> -docstring "comment"   ':comment <ret>'

# New windows
map global normal <c-n> -docstring "new client"     ':new <ret>'
map global normal <c-t> -docstring "new terminal"   ':connect terminal <ret>'
map global normal +     -docstring "new popup"      ':connect popup <ret>'

# Pickers
map global normal B     -docstring "buffer picker"   ': connect terminal kamp-buffers<ret>'
map global normal <c-p> -docstring "file picker"     ': connect terminal kamp-files<ret>'
map global normal <c-g> -docstring "grep picker"     ': connect terminal kamp-grep<ret>'

# External Programs
map global normal <c-h> -docstring "lf"        ':connect terminal lf <ret>'
map global normal <c-v> -docstring "lazygit"   ':connect terminal lazygit <ret>'

###################### PROMPT KEYS ######################

map global prompt <c-n> <tab>   -docstring "next completion"
map global prompt <c-p> <s-tab> -docstring "previous completion"

map global prompt <a-.> -docstring "insert buffer directory"     '%sh{dirname "$kak_buffile"}<a-!>/'
map global prompt <a-,> -docstring "insert git root directory"   '%sh{git rev-parse --show-toplevel}<a-!>/'

###################### INSERT KEYS ######################

map global insert <c-v> -docstring "insert mode paste"   '<esc>Pi'

################# MODES ##################

map global user <space> : -docstring "prompt"

# Navigate buffers
cork kakoune-buffers https://github.com/delapouite/kakoune-buffers %{
  hook global WinDisplay .* info-buffers
    map global normal b ":enter-buffers-mode <ret>"
    alias global bd  delete-buffer
    alias global bd! delete-buffer!
    alias global bf  buffer-first
    alias global bl  buffer-last
    alias global bo  buffer-only
    alias global bo! buffer-only-force
}

cork kakoune-cd https://github.com/delapouite/kakoune-cd %{
  map global user c ': enter-user-mode cd<ret>' -docstring 'cd'
  alias global cdb change-directory-current-buffer
  alias global cdr change-directory-project-root
  alias global ecd edit-current-buffer-directory
  alias global pwd print-working-directory
}

cork case https://gitlab.com/FlyingWombat/case.kak %{
  map global user C -docstring "case"   ': enter-user-mode case<ret>'
  map global case u '~' -docstring "upper"
  map global case l '`' -docstring "lower"
  map global case i '<a-`>' -docstring "invert"
  map global case s       -docstring "snake_case"      ': case-to-snake<ret>'
  map global case d       -docstring "dash-case"       ': case-to-dash<ret>'
  map global case .       -docstring "dot.case"        ': case-to-dot<ret>'
  map global case <space> -docstring "space case"      ': case-to-space<ret>'
  map global case t       -docstring "Title Case"      ': case-to-title<ret>'
  map global case c       -docstring "camelCase"       ': case-to-camel<ret>'
  map global case p       -docstring "PascalCase"      ': case-to-pascal<ret>'
  map global case j       -docstring "select joints"   ': case-select-joints<ret>'
  map global case J       -docstring "unify joints"    ': case-unify-joints<ret>'
  map global case w       -docstring "select words"    ': case-select-words<ret>'
}

map global user d -docstring "dev"  ':enter-user-mode dev <ret>'

cork kakoune-easymotion https://github.com/danr/kakoune-easymotion %{
  declare-user-mode e-motion
  map global user e -docstring "e-motion" ':enter-user-mode e-motion <ret>'
    map global e-motion e -docstring "→ word"   ':easy-motion-w <ret>'
    map global e-motion E -docstring "→ WORD"   ':easy-motion-W <ret>'
    map global e-motion f -docstring "→ char"   ':easy-motion-f <ret>'
    map global e-motion b -docstring "← char"   ':easy-motion-alt-f <ret>'
    map global e-motion j -docstring "↓ line"   ':easy-motion-j <ret>'
    map global e-motion k -docstring "↑ line"   ':easy-motion-k <ret>'
    map global e-motion w -docstring "← word"   ':easy-motion-b <ret>'
    map global e-motion W -docstring "← WORD"   ':easy-motion-B <ret>'
}

declare-user-mode grep
  map global user g -docstring "grep"         ':enter-user-mode grep <ret>'
  map global grep g -docstring "grep"         ':grep '
  map global grep j -docstring "next match"   ':grep-next-match <ret>'
  map global grep k -docstring "prev match"   ':grep-previous-match <ret>'
  map global grep l -docstring "live-grep"    ':live-grep <ret>'

map global user k -docstring "klip off"   ':kakboard-disable; kakboard-disable <ret>'
map global user K -docstring "klip on"    ':kakboard-enable <ret>'

map global user l -docstring "lsp" %{:enter-user-mode lsp <ret>}
  map global lsp <minus> -docstring "disable"   ':lsp-disable-window <ret>'
  map global lsp <plus>  -docstring "enable"    ':lsp-enable-window <ret>'

map global user M -docstring "math"   ':math <ret>'

cork kakoune-focus https://github.com/caksoylar/kakoune-focus %{
  map global user f -docstring "focus"   ':focus-toggle <ret>'
}

# Edit/extend/trim selections one by one
cork kakoune-phantom-selection https://github.com/occivink/kakoune-phantom-selection %{
  declare-user-mode phantom
  map global user p -docstring "phantom"       ':enter-user-mode phantom <ret>'
  map global phantom a -docstring "add"        ':phantom-selection-add-selection <ret>'
  map global phantom c -docstring "clear"      ':phantom-selection-select-all; phantom-selection-clear <ret>'
  map global phantom n -docstring "next"       ':phantom-selection-iterate-next <ret>'
  map global phantom p -docstring "previous"   ':phantom-selection-iterate-prev <ret>'
}

# Select/edit surrounding chars and tags
cork kakoune-surround https://github.com/h-youhei/kakoune-surround
  declare-user-mode surround
  map global normal <'> ":enter-user-mode surround <ret>"
  map global surround d -docstring "delete"              ':delete-surround <ret>'
  map global surround i -docstring "insert"              ':surround <ret>'
  map global surround r -docstring "replace"             ':change-surround <ret>'
  map global surround s -docstring "select"              ':select-surround <ret>'
  map global surround D -docstring "delete tag"          ':delete-surrounding-tag <ret>'
  map global surround I -docstring "surround with tag"   ':surround-with-tag <ret>'
  map global surround R -docstring "replace tag"         ':change-surrounding-tag <ret>'
  map global surround S -docstring "select tag"          ':select-surrounding-tag <ret>'

cork mru-files https://gitlab.com/kstr0k/mru-files.kak %{
  require-module kakhist
  kakhist-init
  map global normal <c-r> -docstring "recent files" ':mru-files <ret>'
  declare-user-mode recent
  map global user r -docstring "recent" ':enter-user-mode recent<ret>'
  map global recent f -docstring "files"           ':mru-files <ret>'
  map global recent r -docstring "related files"   ':mru-files-related <ret>'
  map global recent l -docstring "load session"    ':mru-files-session-load <ret>'
  map global recent s -docstring "save session"    ':mru-files-session-save <ret>'
}

# Spelling and grammar checking
declare-user-mode spell
  map global user s -docstring "spell"      ':spell <ret>:enter-user-mode -lock spell <ret>'
  map global spell a -docstring "add"       ':spell-add <ret>'
  map global spell c -docstring "clear"     ':spell-clear <ret>'
  map global spell e -docstring "enable"    ':spell <ret>'
  map global spell n -docstring "next"      ':spell-next <ret>'
  map global spell r -docstring "replace"   ':spell-replace <ret>'
  declare-option str language en-US

cork ui https://github.com/kkga/ui.kak %{
  map global user u -docstring "ui mode"   ':enter-user-mode ui <ret>'
  set-option global ui_wrap_flags -word -indent -marker ~~
  hook global WinCreate .* %{
    ui-git-diff-enable
    ui-lint-enable
    ui-todos-enable
    ui-trailing-spaces-enable
    ui-whitespaces-enable
  }
}

# Write to file
map global user w -docstring "write"   ':w <ret>'

cork grep-write https://github.com/JacobTravers/grep-write.kak

map global user / -docstring "search"   ':grep '
